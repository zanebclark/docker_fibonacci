# ----------------------------------------------------------------------------
# Github Action Workflow to Deploy Node JS/Docker App to AWS Elastic Beanstalk
#
# Version                 Date                  Info
# 1.0                     12/26/2019            Initial Version
#
# Made by Zane Clark
# ----------------------------------------------------------------------------
name: CI-Pipeline-to-AWS-ElasticBeanstalk
on: [push, pull_request]

env:
  EB_PACKAGE_S3_BUCKET_NAME : "elasticbeanstalk-us-east-1-057283593447"
  EB_APPLICATION_NAME       : "multi-docker"
  EB_ENVIRONMENT_NAME       : "MultiDocker-env"
  DEPLOY_PACKAGE_NAME       : "docker-multi-app-${{ github.sha }}.zip"
  AWS_REGION_NAME           : "us-east-1"

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Build the client Dockerfile.dev
        run: docker  build -t zanebclark/react-test -f ./client/Dockerfile.dev ./client

      - name: Check running containers
        run: docker ps

      - name: Run test suite
        run: docker run -e CI=true zanebclark/react-test npm run test

      - name: Log in to Docker CLI
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build Production Client
        run: docker build -t zanebclark/multi-client ./client

      - name: Push Production Client
        run: docker push zanebclark/multi-client

      - name: Build Production Nginx
        run: docker build -t zanebclark/multi-nginx ./nginx

      - name: Push Production Nginx
        run: docker push zanebclark/multi-nginx

      - name: Build Production Server
        run: docker build -t zanebclark/multi-server ./server

      - name: Push Production Server
        run: docker push zanebclark/multi-server

      - name: Build Production Worker
        run: docker build -t zanebclark/multi-worker ./worker

      - name: Push Production Worker
        run: docker push zanebclark/multi-worker

  my_ci_pipeline:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Create zip deployment package
        run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*

      - name: Copy our deployment package to S3 bucket
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.MY_AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.MY_AWS_SECRET_KEY }}
        run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/docker-multi-deployments/

      - name: Print a nice message upon completion
        run: echo "CI Pipeline Complete"

  my_cd_pipeline:
    runs-on: ubuntu-latest
    needs: my_ci_pipeline
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Create new Elastic Beanstalk application version
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.MY_AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.MY_AWS_SECRET_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_REGION_NAME }}
        run: |
            aws elasticbeanstalk create-application-version \
            --application-name ${{ env.EB_APPLICATION_NAME }} \
            --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="docker-multi-deployments/${{ env.DEPLOY_PACKAGE_NAME }}" \
            --version-label "Ver-${{ github.sha }}" \
            --description "CommitSHA-${{ github.sha }}"

      - name: List application versions
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.MY_AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.MY_AWS_SECRET_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_REGION_NAME }}
        run: aws elasticbeanstalk describe-application-versions --application-name docker-react

      - name: Deploy our new Application Version
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.MY_AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.MY_AWS_SECRET_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_REGION_NAME }}
        run: aws elasticbeanstalk update-environment --environment-name ${{env.EB_ENVIRONMENT_NAME}} --version-label "Ver-${{ github.sha }}"

      - name: Print a nice message upon completion
        run: echo "CD Pipeline Complete"